{"ast":null,"code":"var _jsxFileName = \"/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/views/CampusView.js\";\n// CampusView.js\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus,\n    deleteStudent,\n    addStudent,\n    studentsNotInCampus\n  } = props;\n\n  // Render a single Campus view with list of its students\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl,\n      alt: campus.name,\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), campus.students.map(student => {\n      let name = student.firstname + \" \" + student.lastname;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/student/${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteStudent(student.id),\n          children: \"Delete Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Student:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => addStudent(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select a student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), studentsNotInCampus.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: student.id,\n        children: [student.firstname, \" \", student.lastname]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","CampusView","props","campus","deleteStudent","addStudent","studentsNotInCampus","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","width","address","description","students","map","student","firstname","lastname","to","id","onClick","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/views/CampusView.js"],"sourcesContent":["// CampusView.js\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const { campus, deleteStudent, addStudent, studentsNotInCampus } = props;\n  \n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <h1>{campus.name}</h1>\n      <img src={campus.imageUrl} alt={campus.name} width={200}/>\n\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      {campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return (\n          <div key={student.id}>\n            <Link to={`/student/${student.id}`}>\n              <h2>{name}</h2>\n            </Link>  \n            <button onClick={() => deleteStudent(student.id)}>Delete Student</button>           \n          </div>\n        );\n      })}\n      \n      <h2>Add a Student:</h2>\n      <select onChange={(e) => addStudent(e.target.value)}>\n        <option>Select a student</option>\n        {studentsNotInCampus.map(student => (\n          <option key={student.id} value={student.id}>\n            {student.firstname} {student.lastname}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CampusView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}