{"ast":null,"code":"var _jsxFileName = \"/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/containers/EditStudentContainer.js\";\n/*==================================================\nEditStudentContainer.js\n================================================== */\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\nimport { Header } from '../views';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        imageUrl: this.state.imageUrl,\n        gpa: this.state.gpa,\n        campusId: this.state.campusId\n      };\n\n      // Update student in back-end database\n      await this.props.editStudent(this.props.match.params.id, student);\n\n      // Trigger redirect to show the updated student\n      this.setState({\n        redirect: true\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageUrl: \"\",\n      gpa: null,\n      campusId: null,\n      redirect: false\n    };\n  }\n  async componentDidMount() {\n    await this.props.fetchStudent(this.props.match.params.id);\n    const {\n      student\n    } = this.props;\n    if (student) {\n      this.setState({\n        firstname: student.firstname,\n        lastname: student.lastname,\n        email: student.email,\n        imageUrl: student.imageUrl,\n        gpa: student.gpa,\n        campusId: student.campusId\n      });\n    }\n  }\n  render() {\n    // Redirect to the updated student's page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.props.match.params.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this);\n    }\n\n    // Display the edit form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        student: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: (id, student) => dispatch(editStudentThunk(id, student))\n  };\n};\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Component","connect","Redirect","EditStudentView","fetchStudentThunk","editStudentThunk","Header","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","email","imageUrl","gpa","campusId","editStudent","match","params","id","redirect","componentDidMount","fetchStudent","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapState","mapDispatch","dispatch"],"sources":["/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/containers/EditStudentContainer.js"],"sourcesContent":["/*==================================================\nEditStudentContainer.js\n================================================== */\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditStudentView from '../views/EditStudentView';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\nimport {Header} from '../views';\nclass EditStudentContainer extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        firstname: \"\", \n        lastname: \"\",\n        email: \"\",\n        imageUrl: \"\",\n        gpa: null,\n        campusId: null, \n        redirect: false\n      };\n    }\n  \n    async componentDidMount() {\n      await this.props.fetchStudent(this.props.match.params.id);\n      const { student } = this.props;\n      if (student) {\n        this.setState({\n          firstname: student.firstname,\n          lastname: student.lastname,\n          email: student.email,\n          imageUrl: student.imageUrl,\n          gpa: student.gpa,\n          campusId: student.campusId\n        });\n      }\n    }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();  \n  \n    let student = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      email: this.state.email,\n      imageUrl: this.state.imageUrl,\n      gpa: this.state.gpa,\n      campusId: this.state.campusId\n    };\n    \n    // Update student in back-end database\n    await this.props.editStudent(this.props.match.params.id, student);\n\n    // Trigger redirect to show the updated student\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    // Redirect to the updated student's page after submit\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.props.match.params.id}`}/>)\n    }\n\n    // Display the edit form via the corresponding View component\n    return (\n      <div>\n        <Header />\n        <EditStudentView \n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}\n          student = {this.state}\n        />\n      </div>          \n    );\n  }\n}\n\nconst mapState = (state) => {\n    return {\n      student: state.student,\n    };\n  };\n  \n  const mapDispatch = (dispatch) => {\n    return({\n      fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n      editStudent: (id, student) => dispatch(editStudentThunk(id, student)),\n    })\n  }\n  \n  export default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}