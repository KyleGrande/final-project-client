{"ast":null,"code":"var _jsxFileName = \"/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/containers/NewStudentContainer.js\";\n/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewStudentView from '../views/NewStudentView';\nimport { addStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.validateForm = () => {\n      let isValid = true;\n      let errors = {};\n      if (!this.state.firstname) {\n        isValid = false;\n        errors[\"firstname\"] = \"First name is required\";\n      }\n      if (!this.state.lastname) {\n        isValid = false;\n        errors[\"lastname\"] = \"Last name is required\";\n      }\n      if (!this.state.email) {\n        isValid = false;\n        errors[\"email\"] = \"Email is required\";\n      }\n      if (this.state.gpa !== null) {\n        if (this.state.gpa < 0 || this.state.gpa > 4) {\n          isValid = false;\n          errors[\"gpa\"] = \"GPA must be a number between 0 and 4\";\n        }\n      }\n      this.setState({\n        errors: errors\n      });\n      return isValid;\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      if (this.validateForm()) {\n        let student = {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          email: this.state.email,\n          imageUrl: this.state.imageUrl,\n          gpa: this.state.gpa\n        };\n        if (this.state.campusId) {\n          student.campusId = this.state.campusId;\n        }\n        let newStudent = await this.props.addStudent(student);\n        this.setState({\n          firstname: \"\",\n          lastname: \"\",\n          campusId: null,\n          redirect: true,\n          redirectId: newStudent.id\n        });\n      } else {\n        console.log(\"Form validation failed\");\n      }\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageUrl: null,\n      gpa: null,\n      campusId: null,\n      redirect: false,\n      redirectId: null,\n      errors: {}\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewStudentView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        errors: this.state.errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    addStudent: student => dispatch(addStudentThunk(student))\n  };\n};\nexport default connect(null, mapDispatch)(NewStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewStudentView","addStudentThunk","jsxDEV","_jsxDEV","NewStudentContainer","constructor","props","handleChange","event","setState","target","name","value","validateForm","isValid","errors","state","firstname","lastname","email","gpa","handleSubmit","preventDefault","student","imageUrl","campusId","newStudent","addStudent","redirect","redirectId","id","console","log","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/final-assignment/final-project-client/src/components/containers/NewStudentContainer.js"],"sourcesContent":["/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport NewStudentView from '../views/NewStudentView';\nimport { addStudentThunk } from '../../store/thunks';\n\nclass NewStudentContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      firstname: \"\", \n      lastname: \"\",\n      email: \"\",\n      imageUrl: null,\n      gpa: null,\n      campusId: null, \n      redirect: false, \n      redirectId: null,\n      errors: {}\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  validateForm = () => {\n    let isValid = true;\n    let errors = {};\n\n    if (!this.state.firstname) {\n      isValid = false;\n      errors[\"firstname\"] = \"First name is required\";\n    }\n\n    if (!this.state.lastname) {\n      isValid = false;\n      errors[\"lastname\"] = \"Last name is required\";\n    }\n\n    if (!this.state.email) {\n      isValid = false;\n      errors[\"email\"] = \"Email is required\";\n    }\n\n    if (this.state.gpa !== null) {\n      if (this.state.gpa < 0 || this.state.gpa > 4) {\n        isValid = false;\n        errors[\"gpa\"] = \"GPA must be a number between 0 and 4\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    return isValid;\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();  // Prevent browser reload/refresh after submit.\n  \n    if (this.validateForm()) {\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        imageUrl: this.state.imageUrl,\n        gpa: this.state.gpa,\n      };\n    \n      if (this.state.campusId) {\n        student.campusId = this.state.campusId;\n      }\n  \n      let newStudent = await this.props.addStudent(student);\n  \n      this.setState({\n        firstname: \"\", \n        lastname: \"\", \n        campusId: null, \n        redirect: true, \n        redirectId: newStudent.id\n      });\n    } else {\n      console.log(\"Form validation failed\");\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({redirect: false, redirectId: null});\n  }\n\n  render() {\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.state.redirectId}`}/>)\n    }\n\n    return (\n      <div>\n        <Header />\n        <NewStudentView \n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}\n          errors={this.state.errors}      \n        />\n      </div>          \n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        addStudent: (student) => dispatch(addStudentThunk(student)),\n    })\n}\n\nexport default connect(null, mapDispatch)(NewStudentContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}